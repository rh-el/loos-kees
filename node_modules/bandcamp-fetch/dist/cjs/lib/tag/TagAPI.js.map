{"version":3,"file":"TagAPI.js","sourceRoot":"","sources":["../../../../src/lib/tag/TagAPI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,wDAA6C;AAC7C,sGAAmH;AAInH,0EAA+C;AAC/C,oDAAkD;AAClD,kFAAuD;AAOvD,MAAqB,MAAO,SAAQ,oCAAuB;IAEzD,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,mBAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,OAAO,0BAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAA8B;QAC7C,MAAM,OAAO,GAAG;YACd,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,MAAM,CAAC,IAAI;YACtB,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE;SACxB,CAAA;QACD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,mBAAI,CAAC,YAAY,EAAE,IAAI,EAAE,wBAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAClF,OAAO,8BAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;CACF;AAhBD,yBAgBC;AAED,MAAa,aAAc,SAAQ,MAAM;IAIvC,YAAY,MAA4D;QACtE,KAAK,CAAC,MAAM,CAAC,CAAC;QAHhB,yCAAkB;QAIhB,uBAAA,IAAI,0BAAY,MAAM,CAAC,OAAO,MAAA,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,IAAI;QACR,OAAO,uBAAA,IAAI,8BAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAA8B;QAC7C,OAAO,uBAAA,IAAI,8BAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,CAAC;CACF;AAhBD,sCAgBC","sourcesContent":["import { URLS } from '../utils/Constants.js';\nimport BaseAPIWithImageSupport, { type BaseAPIWithImageSupportParams } from '../common/BaseAPIWithImageSupport.js';\nimport { type ImageFormat } from '../types/Image.js';\nimport { type RelatedTags, type TagList } from '../types/Tag.js';\nimport type Limiter from '../utils/Limiter.js';\nimport TagListParser from './TagListParser.js';\nimport { FetchMethod } from '../utils/Fetcher.js';\nimport RelatedTagsParser from './RelatedTagsParser.js';\n\nexport interface TagAPIGetRelatedParams {\n  tags: string[];\n  size?: number;\n}\n\nexport default class TagAPI extends BaseAPIWithImageSupport {\n\n  async list(): Promise<TagList> {\n    const html = await this.fetch(URLS.SITE_URL);\n    return TagListParser.parseTags(html);\n  }\n\n  async getRelated(params: TagAPIGetRelatedParams): Promise<RelatedTags> {\n    const payload = {\n      combo: true,\n      tag_names: params.tags,\n      size: params.size || 20\n    }\n    const json = await this.fetch(URLS.RELATED_TAGS, true, FetchMethod.POST, payload);\n    return RelatedTagsParser.parseRelatedTags(json);\n  }\n}\n\nexport class LimiterTagAPI extends TagAPI {\n\n  #limiter: Limiter;\n\n  constructor(params: BaseAPIWithImageSupportParams & { limiter: Limiter }) {\n    super(params);\n    this.#limiter = params.limiter;\n  }\n\n  async list(): Promise<TagList> {\n    return this.#limiter.schedule(() => super.list());\n  }\n\n  async getRelated(params: TagAPIGetRelatedParams): Promise<RelatedTags> {\n    return this.#limiter.schedule(() => super.getRelated(params));\n  }\n}\n"]}