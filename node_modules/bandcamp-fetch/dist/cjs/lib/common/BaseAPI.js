"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _BaseAPI_fetcher, _BaseAPI_cache;
Object.defineProperty(exports, "__esModule", { value: true });
class BaseAPI {
    constructor(params) {
        _BaseAPI_fetcher.set(this, void 0);
        _BaseAPI_cache.set(this, void 0);
        __classPrivateFieldSet(this, _BaseAPI_fetcher, params.fetcher, "f");
        __classPrivateFieldSet(this, _BaseAPI_cache, params.cache, "f");
    }
    fetch(url, jsonResponse, method, payload) {
        return __classPrivateFieldGet(this, _BaseAPI_fetcher, "f").fetch(url, jsonResponse, method, payload);
    }
    get cache() {
        return __classPrivateFieldGet(this, _BaseAPI_cache, "f");
    }
}
_BaseAPI_fetcher = new WeakMap(), _BaseAPI_cache = new WeakMap();
exports.default = BaseAPI;
//# sourceMappingURL=BaseAPI.js.map