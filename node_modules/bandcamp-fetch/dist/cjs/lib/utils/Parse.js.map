{"version":3,"file":"Parse.js","sourceRoot":"","sources":["../../../../src/lib/utils/Parse.ts"],"names":[],"mappings":"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","sourcesContent":["import { type load as cheerioLoad } from 'cheerio';\nimport type Label from '../types/Label.js';\nimport { URLS } from './Constants.js';\nimport type UserKind from '../types/UserKind.js';\nimport { type ImageFormat } from '../types/Image.js';\n\nexport interface BackToLabel {\n  text: string | null;\n  url: string;\n}\n\nexport interface UrlParts {\n  base: string;\n  path: string;\n  query: string;\n  hash: string;\n  searchParams: URLSearchParams;\n}\n\ntype CheerioSelector = ReturnType<typeof cheerioLoad>;\n\n/**\n * @internal\n *\n * @param $\n * @returns\n */\nexport function parseLabelFromBackToLabelLink($: CheerioSelector): Label | null {\n  const labelLink = $('.back-to-label-link');\n  if (labelLink.length) {\n    const linkText = labelLink.find('.back-link-text').html();\n    const labelName = linkText &&\n      (substrAfter(linkText, '<br/>') ||\n        substrAfter(linkText, '<br>') ||\n        substrBefore(linkText, ' に戻る') ||\n        substrBefore(linkText, ' のアイテムをもっと聴く'));\n    const linkHref = labelLink.attr('href');\n    const labelHref = linkHref && splitUrl(linkHref).base;\n\n    return labelName && labelHref ? {\n      type: 'label',\n      name: labelName,\n      url: labelHref\n    } : null;\n  }\n\n  return null;\n}\n\nexport function parsePublisher(json: any, imageFormat: ImageFormat | null): UserKind | null {\n  if (json.publisher) {\n    const imageUrl = reformatImageUrl(json.publisher.image, imageFormat);\n    const publisher: UserKind = {\n      name: json.publisher.name,\n      url: json.publisher['@id'],\n      description: json.publisher.description\n    };\n    if (imageUrl) {\n      publisher.imageUrl = imageUrl;\n    }\n    return publisher;\n  }\n  return null;\n}\n\n/**\n * @internal\n *\n * @param url\n * @param baseUrl\n * @returns\n */\nexport function normalizeUrl(url: string, baseUrl?: string): string;\nexport function normalizeUrl(url?: string, baseUrl?: string): string | null {\n  if (!url) {\n    return null;\n  }\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  if (!baseUrl) {\n    baseUrl = URLS.SITE_URL;\n  }\n  return new URL(url, baseUrl).toString();\n}\n\nexport function getAdditionalPropertyValue(o: Record<string, any>, propName: string): string | undefined {\n  if (Array.isArray(o.additionalProperty)) {\n    const p = o.additionalProperty.find((prop) => prop.name === propName);\n    if (p?.value !== undefined) {\n      return p.value;\n    }\n  }\n  return undefined;\n}\n\nexport function isAbsoluteUrl(url: string) {\n  const isAbsolute = new RegExp('^([a-z]+://|//)', 'i');\n  return isAbsolute.test(url);\n}\n\nexport function substrAfter(str: string, after: string): string | null {\n  const afterIndex = str.indexOf(after);\n  return afterIndex >= 0 ? str.substring(afterIndex + after.length) : null;\n}\n\nexport function substrBefore(str: string, before: string): string | null {\n  const beforeIndex = str.indexOf(before);\n  return beforeIndex >= 0 ? str.substring(0, beforeIndex) : null;\n}\n\nexport function splitUrl(url: string): UrlParts {\n  const urlObj = new URL(url);\n  return {\n    base: `${urlObj.protocol}//${urlObj.host}`,\n    path: urlObj.pathname,\n    query: urlObj.search,\n    hash: urlObj.hash,\n    searchParams: urlObj.searchParams\n  };\n}\n\nexport function stripTags(str: string): string {\n  // https://css-tricks.com/snippets/javascript/strip-html-tags-in-javascript/\n  return str.replace(/(<([^>]+)>)/gi, '');\n}\n\nexport function stripLineBreaks(str: string): string {\n  return str.replace(/(\\r\\n|\\n|\\r)/gm, ' ');\n}\n\nexport function stripMultipleWhitespaces(str: string) {\n  return str.replace(/\\s+/g, ' ');\n}\n\nexport function brToNewLine(str: string): string {\n  // https://stackoverflow.com/questions/5959415/jquery-javascript-regex-replace-br-with-n\n  return str.replace(/<br\\s*[/]?>/gi, '\\n');\n}\n\n/**\n* @internal\n* Takes an image URL and returns one that corresponds to `imageFormat`.\n* @param imageUrl\n* @param imageFormat\n* @returns\n*/\nexport function reformatImageUrl(imageUrl?: string | null, imageFormat?: ImageFormat | null): string | null {\n  if (imageUrl) {\n    // Regex from: https://github.com/masterT/bandcamp-scraper/blob/master/lib/htmlParser.js\n    return imageFormat ? imageUrl.replace(/_\\d{1,3}\\./, `_${imageFormat.id}.`) : imageUrl;\n  }\n\n  return null;\n}\n\nexport class ParseError extends Error {\n  parseTarget?: string;\n  cause?: Error;\n\n  constructor(message: string, parseTarget?: string, cause?: any) {\n    super(message);\n    this.parseTarget = parseTarget;\n    if (cause) {\n      this.cause = cause instanceof Error ? cause : Error(cause.toString());\n    }\n  }\n}\n"]}