{"version":3,"file":"DiscoverResultParser.js","sourceRoot":"","sources":["../../../../src/lib/discovery/DiscoverResultParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { URL } from 'url';\nimport type Album from '../types/Album.js';\nimport type Artist from '../types/Artist.js';\nimport { type DiscoverOptions, type DiscoverResult, type SanitizedDiscoverParams } from '../types/Discovery.js';\nimport { type ImageFormat } from '../types/Image.js';\nimport type Shirt from '../types/Shirt.js';\nimport { ParseError } from '../utils/Parse.js';\n\ninterface DiscoverResultParseOptions {\n  imageBaseUrl: string;\n  albumImageFormat: ImageFormat | null;\n  artistImageFormat: ImageFormat | null;\n  merchImageFormat: ImageFormat | null;\n}\n\nexport default class DiscoverResultParser {\n\n  static parseDiscoverResult(json: any, opts: DiscoverResultParseOptions, params: SanitizedDiscoverParams, availableOptions: DiscoverOptions): DiscoverResult {\n    if (typeof json === 'object' && Array.isArray(json.results)) {\n      \n      const items = (json.results as any[]).reduce<Array<Album | Shirt>>((result, item: any) => {\n        switch (item.result_type) {\n          case 'a': {\n            const album = this.#parseAlbum(item, opts, availableOptions);\n            result.push(album);\n            break;\n          }\n          case 's': {\n            const shirt = this.#parseShirt(item, opts);\n            result.push(shirt);\n            break;\n          }\n        }\n        return result;\n      }, []);\n\n      const parsed: DiscoverResult = {\n        items,\n        total: json.result_count,\n        params\n      };\n\n      if (json.cursor) {\n        parsed.continuation = {\n          ...params,\n          cursor: json.cursor\n        };\n        if (opts.albumImageFormat) {\n          parsed.continuation.albumImageFormat = opts.albumImageFormat;\n        }\n        if (opts.artistImageFormat) {\n          parsed.continuation.artistImageFormat = opts.artistImageFormat;\n        }\n        if (opts.merchImageFormat) {\n          parsed.continuation.merchImageFormat = opts.merchImageFormat;\n        }\n      }\n\n      return parsed;\n    }\n\n    throw new ParseError('Failed to parse discover results: data is missing or has invalid \\'results\\' field.', json);\n  }\n\n  static #parseAlbum(item: any, opts: DiscoverResultParseOptions, availableOptions: DiscoverOptions) {\n    const artist: Artist = {\n      type: 'artist',\n      name: item.album_artist || item.band_name\n    };\n    const album: Album = {\n      type: 'album',\n      id: item.id,\n      name: item.title,\n      artist,\n      location: item.band_location\n    };\n    const genre = item.band_genre_id !== undefined ?\n      availableOptions.genres.find((genre) => item.band_genre_id === genre.id) : null;\n    if (genre?.name) {\n      album.genre = genre.name;\n    }\n    if (item.band_url) {\n      artist.url = this.#stripFromDiscoverPage(item.band_url);\n    }\n    if (item.item_url) {\n      album.url = this.#stripFromDiscoverPage(item.item_url);\n    }\n    if (item.item_image_id && opts.albumImageFormat) {\n      album.imageUrl = this.#getImageURL(item.item_image_id, opts.imageBaseUrl, opts.albumImageFormat, 'a');\n    }\n    if (item.featured_track) {\n      album.featuredTrack = {\n        id: item.featured_track.id,\n        name: item.featured_track.title,\n        streamUrl: item.featured_track.stream_url\n      };\n    }\n    if (item.band_bio_image_id && opts.artistImageFormat) {\n      artist.imageUrl = this.#getImageURL(item.band_bio_image_id, opts.imageBaseUrl, opts.artistImageFormat);\n    }\n    if (item.label_name) {\n      album.label = {\n        name: item.label_name\n      };\n      if (item.label_url) {\n        album.label.url = this.#stripFromDiscoverPage(item.label_url);\n      }\n    }\n    return album;\n  }\n\n  static #parseShirt(item: any, opts: DiscoverResultParseOptions) {\n    const shirt: Shirt = {\n      type: 'shirt',\n      name: item.title,\n    };\n    if (item.item_url) {\n      shirt.url = this.#stripFromDiscoverPage(item.item_url);\n    }\n    if (item.item_image_id && opts.merchImageFormat) {\n      shirt.imageUrl = {\n        primary: this.#getImageURL(item.item_image_id, opts.imageBaseUrl, opts.merchImageFormat)\n      };\n      if (item.tshirt_secondary_image_id) {\n        shirt.imageUrl.secondary = this.#getImageURL(item.tshirt_secondary_image_id, opts.imageBaseUrl, opts.merchImageFormat)\n      }\n    }\n    if (item.release_date) {\n      shirt.releaseDate = item.release_date;\n    }\n    if (item.band_name) {\n      const artist: Artist = {\n        type: 'artist',\n        name: item.band_name\n      };\n      if (item.band_url) {\n        artist.url = this.#stripFromDiscoverPage(item.band_url);\n      }\n      if (item.band_bio_image_id && opts.artistImageFormat) {\n        artist.imageUrl = this.#getImageURL(item.band_bio_image_id, opts.imageBaseUrl, opts.artistImageFormat);\n      }\n      shirt.artist = artist;\n    }\n    return shirt;\n  }\n\n  static #getImageURL(imageId: string, imageBaseUrl: string, format: ImageFormat, prefix = '') {\n    return `${imageBaseUrl}/img/${prefix}${imageId}_${format.id}.jpg`;\n  }\n\n  static #stripFromDiscoverPage(url: string) {\n    const urlObj = new URL(url);\n    const fromValue = urlObj.searchParams.get('from')?.trim();\n    if (fromValue === 'discover_page') {\n      urlObj.searchParams.delete('from');\n    }\n    return urlObj.toString();\n  }\n}\n"]}