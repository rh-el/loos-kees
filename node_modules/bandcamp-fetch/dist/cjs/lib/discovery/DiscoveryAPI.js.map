{"version":3,"file":"DiscoveryAPI.js","sourceRoot":"","sources":["../../../../src/lib/discovery/DiscoveryAPI.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseAPIWithImageSupport, { type BaseAPIWithImageSupportParams } from '../common/BaseAPIWithImageSupport.js';\nimport { type DiscoverOptions, type DiscoverParams, type DiscoverResult, type DiscoverResultContinuation, type SanitizedDiscoverParams } from '../types/Discovery.js';\nimport { CacheDataType } from '../utils/Cache.js';\nimport { URLS } from '../utils/Constants.js';\nimport { FetchMethod } from '../utils/Fetcher.js';\nimport type Limiter from '../utils/Limiter.js';\nimport type NameValuePair from '../utils/NameValuePair.js';\nimport DiscoverOptionsParser from './DiscoverOptionsParser.js';\nimport DiscoverResultParser from './DiscoverResultParser.js';\n\ninterface DiscoverRequestPayload {\n  category_id: number; // (digital, vinyl, cd, cassetes, shirts)\n  cursor: string; // Page cursor\n  geoname_id: number; // Location\n  include_result_types: string[]; // Always ['a', 's'] ?\n  size: number; // Number of results to get\n  slice: string; // (best-selling, new arrivals, surprise me)\n  tag_norm_names: string[]; // Genres, subgenres, customTags...\n  time_facet_id: number | null; // Time - Note: set to null if -1 (fresh)\n}\n\nexport default class DiscoveryAPI extends BaseAPIWithImageSupport {\n\n  async getAvailableOptions(): Promise<DiscoverOptions> {\n    return this.cache.getOrSet(CacheDataType.Constants, 'discoverOptions', async () => {\n      const html = await this.fetch(URLS.DISCOVER.SITE);\n      return DiscoverOptionsParser.parseOptions(html);\n    });\n  }\n\n  async sanitizeDiscoverParams(params?: DiscoverParams) {\n    const options = await this.getAvailableOptions();\n\n    const _getOptionValue = <T>(optArr: NameValuePair<T>[], value?: T, defaultIndex = 0) => {\n      if (value !== undefined && optArr) {\n        const opt = optArr.find((o) => o.value == value);\n        if (opt) {\n          return opt.value;\n        }\n      }\n      if (optArr) {\n        return optArr[defaultIndex]?.value;\n      }\n\n      return undefined;\n    };\n\n    const category = _getOptionValue(options.categories, params?.category) || 0;\n    const genre = _getOptionValue(options.genres, params?.genre, -1);\n    const sortBy = _getOptionValue(options.sortBys, params?.sortBy, -1) || 'top';\n    const location = _getOptionValue(options.locations, params?.location) || 0;\n    const time = _getOptionValue(options.times, params?.time) || -1;\n\n    const sanitized: SanitizedDiscoverParams = {\n      category,\n      sortBy,\n      location,\n      time,\n      size: params?.size || 60\n    };\n    if (genre) {\n      sanitized.genre = genre;\n      const subgenreOptions = options.subgenres[genre];\n      if (subgenreOptions) {\n        const subgenre = _getOptionValue(subgenreOptions, params?.subgenre, -1);\n        if (subgenre) {\n          sanitized.subgenre = subgenre;\n        }\n      }\n    }\n    if (params?.customTags) {\n      sanitized.customTags = params.customTags;\n    }\n\n    return sanitized;\n  }\n\n  async discover(params?: DiscoverParams | DiscoverResultContinuation): Promise<DiscoverResult> {\n    const imageConstants = await this.imageAPI.getConstants();\n    const options = await this.getAvailableOptions();\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      albumImageFormat: await this.imageAPI.getFormat(params?.albumImageFormat, 9),\n      artistImageFormat: await this.imageAPI.getFormat(params?.artistImageFormat, 21),\n      merchImageFormat: await this.imageAPI.getFormat(params?.merchImageFormat, 9)\n    };\n    let payload: DiscoverRequestPayload;\n    let sanitizedParams: SanitizedDiscoverParams;\n    if (params && DiscoveryAPI.#isContinuation(params)) {\n      sanitizedParams = { ...params };\n      Reflect.deleteProperty(sanitizedParams, 'cursor');\n      payload = DiscoveryAPI.getDiscoverRequestPayload(params);\n    }\n    else {\n      sanitizedParams = await this.sanitizeDiscoverParams(params);\n      payload = DiscoveryAPI.getDiscoverRequestPayload(sanitizedParams);\n    }\n    const json = await this.fetch(URLS.DISCOVER.API, true, FetchMethod.POST, payload);\n    const result = DiscoverResultParser.parseDiscoverResult(json, opts, sanitizedParams, options);\n    if (result.continuation) {\n      if (!params?.albumImageFormat) {\n        delete result.continuation.albumImageFormat;\n      }\n      if (!params?.artistImageFormat) {\n        delete result.continuation.artistImageFormat;\n      }\n      if (!params?.merchImageFormat) {\n        delete result.continuation.merchImageFormat;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @internal\n   */\n  protected static getDiscoverRequestPayload(params: SanitizedDiscoverParams | DiscoverResultContinuation): DiscoverRequestPayload {\n    const tagNames: string[] = [];\n    if (params.genre) {\n      tagNames.push(params.genre);\n    }\n    if (params.subgenre) {\n      tagNames.push(params.subgenre);\n    }\n    if (params.customTags) {\n      tagNames.push(...params.customTags);\n    }\n    return {\n      category_id: params.category,\n      cursor: this.#isContinuation(params) ? params.cursor : '*',\n      geoname_id: params.location,\n      include_result_types: [ 'a', 's' ],\n      size: params.size,\n      slice: params.sortBy,\n      tag_norm_names: tagNames,\n      time_facet_id: params.time === -1 ? null : params.time\n    };\n  }\n\n  static #isContinuation(params: DiscoverParams | DiscoverResultContinuation): params is DiscoverResultContinuation {\n    return Reflect.has(params, 'cursor');\n  }\n}\n\nexport class LimiterDiscoveryAPI extends DiscoveryAPI {\n\n  #limiter: Limiter;\n\n  constructor(params: BaseAPIWithImageSupportParams & { limiter: Limiter }) {\n    super(params);\n    this.#limiter = params.limiter;\n  }\n\n  async getAvailableOptions(): Promise<DiscoverOptions> {\n    return this.#limiter.schedule(() => super.getAvailableOptions());\n  }\n\n  async sanitizeDiscoverParams(params: DiscoverParams): Promise<SanitizedDiscoverParams> {\n    return this.#limiter.schedule(() => super.sanitizeDiscoverParams(params));\n  }\n\n  async discover(params: DiscoverParams): Promise<DiscoverResult> {\n    return this.#limiter.schedule(() => super.discover(params));\n  }\n}\n"]}