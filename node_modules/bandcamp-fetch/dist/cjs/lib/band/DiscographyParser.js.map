{"version":3,"file":"DiscographyParser.js","sourceRoot":"","sources":["../../../../src/lib/band/DiscographyParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { load as cheerioLoad } from 'cheerio';\nimport { type ImageFormat } from '../types/Image.js';\nimport { normalizeUrl, reformatImageUrl, splitUrl } from '../utils/Parse.js';\nimport type Track from '../types/Track.js';\nimport type Album from '../types/Album.js';\nimport TrackInfoParser from '../track/TrackInfoParser.js';\nimport AlbumInfoParser from '../album/AlbumInfoParser.js';\nimport { decode } from 'html-entities';\n\ninterface DiscographyParseOptions {\n  imageBaseUrl: string;\n  bandUrl: string;\n  imageFormat: ImageFormat | null;\n}\n\nexport default class DiscographyParser {\n  static parseDiscography(html: string, opts: DiscographyParseOptions): Array<Album | Track> {\n    const $ = cheerioLoad(html);\n\n    // One-album / one-track artists don't have a discography page.\n    // The page for the album or track will be loaded instead.\n    // Check if this is the case and handle accordingly.\n    const currentAlbumOrTrack = $('script[type=\"application/ld+json\"]');\n    let isOneTrack = false,\n      isOneAlbum = false;\n    if (currentAlbumOrTrack.length) {\n      let currentAlbumOrTrackData;\n      const currentAlbumOrTrackHtml = currentAlbumOrTrack.html();\n      if (currentAlbumOrTrackHtml) {\n        try {\n          currentAlbumOrTrackData = JSON.parse(currentAlbumOrTrackHtml);\n        }\n        catch (error: any) {\n          currentAlbumOrTrackData = null;\n        }\n      }\n      if (currentAlbumOrTrackData && typeof currentAlbumOrTrackData === 'object') {\n        // Check if there is a 'discography' element and, if there is, whether\n        // It is hidden or has only one track / album child\n        const discographyEl = $('#discography');\n        if (discographyEl.length === 0 || discographyEl.css('display') === 'none' || discographyEl.find('li').length === 1) {\n          const currentAlbumOrTrackUrl = splitUrl(currentAlbumOrTrackData['@id']);\n          isOneTrack = !!currentAlbumOrTrackUrl.path.startsWith('/track/');\n          isOneAlbum = !!currentAlbumOrTrackUrl.path.startsWith('/album/');\n        }\n      }\n    }\n    if (isOneTrack || isOneAlbum) {\n      const newOpts = {\n        imageBaseUrl: opts.imageBaseUrl,\n        albumImageFormat: opts.imageFormat,\n        artistImageFormat: null,\n        includeRawData: false\n      };\n      const info = isOneTrack ? TrackInfoParser.parseInfo(html, newOpts) : AlbumInfoParser.parseInfo(html, newOpts);\n      if (info.artist !== undefined) {\n        return [ {\n          ...info,\n          artist: {\n            name: info.artist.name\n          }\n        } ];\n      }\n      return [ info ];\n    }\n\n    const allLinks = $('a');\n    const items: Record<string, Partial<Album | Track>> = {};\n    const defaultArtistName = $('#band-name-location').find('.title').text();\n    allLinks.each((index, link) => {\n      const linkEl = $(link);\n      const href = linkEl.attr('href');\n      if (typeof href !== 'string' || href === '') {\n        return true;\n      }\n      let host, pathname;\n      // Regex taken from:\n      // https://github.com/masterT/bandcamp-scraper/blob/master/lib/htmlParser.js\n      if ((/^\\/(track|album)\\/(.+)$/).exec(href)) { // Relative url starting with '/track' or '/album'\n        host = opts.bandUrl;\n        pathname = href;\n      }\n      else { // Full url (label discography)\n        try {\n          const _url = splitUrl(href);\n          if (_url.path && (/^\\/(track|album)\\/(.+)$/).exec(_url.path)) {\n            host = _url.base;\n            pathname = _url.path;\n          }\n        }\n        catch (e) {\n          return true;\n        }\n      }\n      if (host !== undefined && pathname !== undefined) {\n        const url = normalizeUrl(pathname, host);\n        if (items[url] === undefined) {\n          items[url] = {\n            type: pathname.startsWith('/track/') ? 'track' : 'album'\n          };\n        }\n        // Link element wraps around img and title\n        const img = linkEl.find('img');\n        if (img.length) {\n          const imgSrc = img.attr('data-original') || img.attr('src');\n          const imageUrl = reformatImageUrl(imgSrc, opts.imageFormat);\n          if (imageUrl) {\n            items[url].imageUrl = imageUrl;\n          }\n        }\n        const title = linkEl.find('.title');\n        if (title.length) {\n          // For labels, title element contains artist name (when it doesn't, then artist = label).\n          // For artists, title element may also contain an artist name which overrides the default\n          const artistNameEl = title.find('.artist-override');\n          if (artistNameEl.length) {\n            const artistName = artistNameEl.text().trim();\n            artistNameEl.remove();\n            items[url].artist = {\n              name: artistName\n            };\n          }\n          else {\n            items[url].artist = {\n              name: defaultArtistName\n            };\n          }\n          items[url].name = title.text().trim();\n        }\n\n        if (img.length > 0 && title.length > 0) {\n          items[url].name = linkEl.text().trim();\n        }\n\n        const idStr = linkEl.parent('li').attr('data-item-id');\n        if (idStr) {\n          const idMatch = /(?:album|track)-(\\d+)$/g.exec(idStr);\n          if (idMatch && idMatch[1]) {\n            items[url].id = Number(idMatch[1]);\n          }\n        }\n      }\n    });\n    const results = [];\n    for (const [ url, props ] of Object.entries(items)) {\n      if (props.type && props.name) {\n        const item: Album | Track = {\n          url,\n          type: props.type,\n          id: props.id,\n          name: props.name,\n          artist: props.artist || {\n            name: defaultArtistName\n          }\n        };\n        if (props.imageUrl) {\n          item.imageUrl = props.imageUrl;\n        }\n        results.push(item);\n      }\n    }\n\n    const rawExtra = decode($('ol[data-client-items]').attr('data-client-items'));\n    let extra;\n    try {\n      extra = JSON.parse(rawExtra);\n    }\n    catch (error: any) {\n      extra = null;\n    }\n    if (Array.isArray(extra)) {\n      const extraItems = extra.reduce<Array<Album | Track>>((acc, itemData) => {\n        if (itemData.type === 'album' || itemData.type === 'track') {\n          const item: Album | Track = {\n            url: normalizeUrl(itemData.page_url),\n            type: itemData.type,\n            id: itemData.id,\n            name: itemData.title,\n            artist: {\n              name: itemData.artist\n            }\n          };\n          if (itemData.art_id && opts.imageFormat?.id) {\n            item.imageUrl = `${opts.imageBaseUrl}/img/a${itemData.art_id}_${opts.imageFormat.id}.jpg`;\n          }\n          acc.push(item);\n        }\n        return acc;\n      }, []);\n\n      results.push(...extraItems);\n    }\n\n    return results;\n  }\n}"]}