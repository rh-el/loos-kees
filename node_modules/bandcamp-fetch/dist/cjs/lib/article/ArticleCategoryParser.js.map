{"version":3,"file":"ArticleCategoryParser.js","sourceRoot":"","sources":["../../../../src/lib/article/ArticleCategoryParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { load as cheerioLoad } from 'cheerio';\nimport { type ArticleCategorySection } from '../types/Article.js';\nimport { URLS } from '../utils/Constants.js';\nimport { isAbsoluteUrl, normalizeUrl } from '../utils/Parse.js';\n\nexport default class ArticleCategoryParser {\n\n  static parseCategories(html: string): ArticleCategorySection[] {\n    const $ = cheerioLoad(html);\n    const dailyUrl = URLS.DAILY;\n\n    const _parseSection = (section: any) => {\n      const h = section.prev('h2');\n      const title = h.length ? h.text() : '';\n      const s: ArticleCategorySection = {\n        name: section.attr('class'),\n        title,\n        sections: [],\n        categories: []\n      };\n      section.children().each((i: number, c: any) => {\n        const tag = c.tagName;\n        c = $(c);\n        if (tag === 'section') {\n          const parsed = _parseSection($(c));\n          if (parsed !== null && s.sections) {\n            s.sections.push(parsed);\n          }\n        }\n        else if (tag === 'div') {\n          c.find('a').each((i: number, a: any) => {\n            a = $(a);\n            let url = a.attr('href');\n            if (!isAbsoluteUrl(url)) {\n              url = normalizeUrl(url, dailyUrl);\n            }\n            if (s.categories) {\n              s.categories.push({\n                url,\n                name: a.text()\n              });\n            }\n          });\n\n        }\n      });\n      if (s.sections?.length === 0) {\n        delete s.sections;\n      }\n      if (s.categories?.length === 0) {\n        delete s.categories;\n      }\n      if (!s.sections && !s.categories) {\n        return null;\n      }\n\n      return s;\n    };\n\n    const sections = $('#daily-view-all').children('section');\n    const results: ArticleCategorySection[] = [];\n    sections.each((i, section) => {\n      const parsed = _parseSection($(section));\n      if (parsed !== null) {\n        results.push(parsed);\n      }\n    });\n\n    return results;\n  }\n}\n"]}