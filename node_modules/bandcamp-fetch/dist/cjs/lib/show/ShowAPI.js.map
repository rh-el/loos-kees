{"version":3,"file":"ShowAPI.js","sourceRoot":"","sources":["../../../../src/lib/show/ShowAPI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,sGAAmH;AAGnH,wDAA6C;AAE7C,4EAAiD;AACjD,oEAAyC;AAazC,MAAqB,OAAQ,SAAQ,oCAAuB;IAE1D,KAAK,CAAC,OAAO,CAAC,MAA4B;QACxC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1D,MAAM,IAAI,GAAG;YACX,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,YAAY,EAAE,cAAc,CAAC,OAAO;YACpC,gBAAgB,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC3E,iBAAiB,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC;YAC9E,eAAe,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC;SAC3E,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9C,OAAO,uBAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAA0B;QACnC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1D,MAAM,IAAI,GAAG;YACX,YAAY,EAAE,cAAc,CAAC,OAAO;YACpC,WAAW,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,CAAC;SACpE,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,mBAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAChD,OAAO,2BAAc,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;CACF;AAxBD,0BAwBC;AAED,MAAa,cAAe,SAAQ,OAAO;IAIzC,YAAY,MAA4D;QACtE,KAAK,CAAC,MAAM,CAAC,CAAC;QAHhB,0CAAkB;QAIhB,uBAAA,IAAI,2BAAY,MAAM,CAAC,OAAO,MAAA,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,MAA4B;QACxC,OAAO,uBAAA,IAAI,+BAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAA0B;QACnC,OAAO,uBAAA,IAAI,+BAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1D,CAAC;CACF;AAhBD,wCAgBC","sourcesContent":["import BaseAPIWithImageSupport, { type BaseAPIWithImageSupportParams } from '../common/BaseAPIWithImageSupport.js';\nimport { type ImageFormat } from '../types/Image.js';\nimport type Show from '../types/Show.js';\nimport { URLS } from '../utils/Constants.js';\nimport type Limiter from '../utils/Limiter.js';\nimport ShowListParser from './ShowListParser.js';\nimport ShowParser from './ShowParser.js';\n\nexport interface ShowAPIGetShowParams {\n  showUrl: string,\n  albumImageFormat?: string | number | ImageFormat;\n  artistImageFormat?: string | number | ImageFormat;\n  showImageFormat?: string | number | ImageFormat;\n}\n\nexport interface ShowAPIListParams {\n  imageFormat?: string | number | ImageFormat;\n}\n\nexport default class ShowAPI extends BaseAPIWithImageSupport {\n\n  async getShow(params: ShowAPIGetShowParams): Promise<Show> {\n    const imageConstants = await this.imageAPI.getConstants();\n    const opts = {\n      showUrl: params.showUrl,\n      imageBaseUrl: imageConstants.baseUrl,\n      albumImageFormat: await this.imageAPI.getFormat(params.albumImageFormat, 9),\n      artistImageFormat: await this.imageAPI.getFormat(params.artistImageFormat, 21),\n      showImageFormat: await this.imageAPI.getFormat(params.showImageFormat, 25)\n    };\n    const html = await this.fetch(params.showUrl);\n    return ShowParser.parseShow(html, opts);\n  }\n\n  async list(params?: ShowAPIListParams) {\n    const imageConstants = await this.imageAPI.getConstants();\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      imageFormat: await this.imageAPI.getFormat(params?.imageFormat, 25)\n    };\n    const json = await this.fetch(URLS.SHOWS, true);\n    return ShowListParser.parseList(json, opts);\n  }\n}\n\nexport class LimiterShowAPI extends ShowAPI {\n\n  #limiter: Limiter;\n\n  constructor(params: BaseAPIWithImageSupportParams & { limiter: Limiter }) {\n    super(params);\n    this.#limiter = params.limiter;\n  }\n\n  async getShow(params: ShowAPIGetShowParams): Promise<Show> {\n    return this.#limiter.schedule(() => super.getShow(params));\n  }\n\n  async list(params?: ShowAPIListParams  ): Promise<Show[]> {\n    return this.#limiter.schedule(() => super.list(params));\n  }\n}\n"]}