import * as bcfetch from './index.js';
declare const _default: bcfetch.BandcampFetch & {
    BaseAPI: typeof bcfetch.BaseAPI;
    BaseAPIWithImageSupport: typeof bcfetch.BaseAPIWithImageSupport;
    AlbumAPI: typeof bcfetch.AlbumAPI;
    ArticleAPI: typeof bcfetch.ArticleAPI;
    BandAPI: typeof bcfetch.BandAPI;
    DiscoveryAPI: typeof bcfetch.DiscoveryAPI;
    FanAPI: typeof bcfetch.FanAPI;
    ImageAPI: typeof bcfetch.ImageAPI;
    ShowAPI: typeof bcfetch.ShowAPI;
    TagAPI: typeof bcfetch.TagAPI;
    TrackAPI: typeof bcfetch.TrackAPI;
    SearchAPI: typeof bcfetch.SearchAPI;
    AutocompleteAPI: typeof bcfetch.AutocompleteAPI;
    StreamAPI: typeof bcfetch.StreamAPI;
    Cache: typeof bcfetch.Cache;
    Fetcher: typeof bcfetch.Fetcher;
    Limiter: typeof bcfetch.Limiter;
    BandcampFetch: typeof bcfetch.BandcampFetch;
    default: bcfetch.BandcampFetch;
    LimiterAlbumAPI: typeof bcfetch.LimiterAlbumAPI;
    LimiterDiscoveryAPI: typeof bcfetch.LimiterDiscoveryAPI;
    ImageFormatFilter: typeof bcfetch.ImageFormatFilter;
    LimiterImageAPI: typeof bcfetch.LimiterImageAPI;
    LimiterArticleAPI: typeof bcfetch.LimiterArticleAPI;
    LimiterBandAPI: typeof bcfetch.LimiterBandAPI;
    LimiterFanAPI: typeof bcfetch.LimiterFanAPI;
    LimiterShowAPI: typeof bcfetch.LimiterShowAPI;
    LimiterTagAPI: typeof bcfetch.LimiterTagAPI;
    LimiterTrackAPI: typeof bcfetch.LimiterTrackAPI;
    SearchItemType: typeof bcfetch.SearchItemType;
    LimiterSearchAPI: typeof bcfetch.LimiterSearchAPI;
    AutocompleteItemType: typeof bcfetch.AutocompleteItemType;
    LimiterAutocompleteAPI: typeof bcfetch.LimiterAutocompleteAPI;
    LimiterStreamAPI: typeof bcfetch.LimiterStreamAPI;
    CacheDataType: typeof bcfetch.CacheDataType;
    FetchMethod: typeof bcfetch.FetchMethod;
    FetchError: typeof bcfetch.FetchError;
    CacheWrapper: typeof bcfetch.CacheWrapper;
};
export = _default;
//# sourceMappingURL=index-cjs.d.ts.map