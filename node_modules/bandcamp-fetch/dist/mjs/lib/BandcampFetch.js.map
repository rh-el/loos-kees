{"version":3,"file":"BandcampFetch.js","sourceRoot":"","sources":["../../../src/lib/BandcampFetch.ts"],"names":[],"mappings":"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","sourcesContent":["import type Bottleneck from 'bottleneck';\nimport AlbumAPI, { LimiterAlbumAPI } from './album/AlbumAPI.js';\nimport ArticleAPI, { LimiterArticleAPI } from './article/ArticleAPI.js';\nimport AutocompleteAPI, { LimiterAutocompleteAPI } from './autocomplete/AutocompleteAPI.js';\nimport BandAPI, { LimiterBandAPI } from './band/BandAPI.js';\nimport DiscoveryAPI, { LimiterDiscoveryAPI } from './discovery/DiscoveryAPI.js';\nimport FanAPI, { LimiterFanAPI } from './fan/FanAPI.js';\nimport ImageAPI, { LimiterImageAPI } from './image/ImageAPI.js';\nimport SearchAPI, { LimiterSearchAPI } from './search/SearchAPI.js';\nimport ShowAPI, { LimiterShowAPI } from './show/ShowAPI.js';\nimport TagAPI, { LimiterTagAPI } from './tag/TagAPI.js';\nimport TrackAPI, { LimiterTrackAPI } from './track/TrackAPI.js';\nimport Cache, { CacheDataType } from './utils/Cache.js';\nimport Fetcher from './utils/Fetcher.js';\nimport Limiter from './utils/Limiter.js';\nimport StreamAPI, { LimiterStreamAPI } from './stream/StreamAPI.js';\nexport interface BandcampFetchParams {\n  cookie?: string | null;\n}\n\nexport default class BandcampFetch {\n\n  #cookie?: string | null;\n  #fetcher: Fetcher;\n  #cache: Cache;\n  #wrappedCache: CacheWrapper;\n  #limiter: Limiter;\n\n  readonly album: AlbumAPI;\n  readonly track: TrackAPI;\n  readonly discovery: DiscoveryAPI;\n  readonly image: ImageAPI;\n  readonly band: BandAPI;\n  readonly tag: TagAPI;\n  readonly article: ArticleAPI;\n  readonly show: ShowAPI;\n  readonly fan: FanAPI;\n  readonly search: SearchAPI;\n  readonly autocomplete: AutocompleteAPI;\n  readonly stream: StreamAPI;\n\n  readonly limiter: {\n    readonly album: LimiterAlbumAPI;\n    readonly track: LimiterTrackAPI;\n    readonly discovery: LimiterDiscoveryAPI;\n    readonly image: LimiterImageAPI;\n    readonly band: LimiterBandAPI;\n    readonly tag: LimiterTagAPI;\n    readonly article: LimiterArticleAPI;\n    readonly show: LimiterShowAPI;\n    readonly fan: LimiterFanAPI;\n    readonly search: LimiterSearchAPI;\n    readonly autocomplete: LimiterAutocompleteAPI;\n    readonly stream: StreamAPI;\n    updateSettings: (options?: Bottleneck.ConstructorOptions) => void;\n  };\n\n  constructor(params?: BandcampFetchParams) {\n    this.#cookie = params?.cookie;\n    this.#cache = new Cache({\n      [CacheDataType.Constants]: 3600,\n      [CacheDataType.Page]: 300\n    }, { page: 10 });\n    this.#wrappedCache = new CacheWrapper(this.#cache);\n    this.#fetcher = new Fetcher({\n      cookie: this.#cookie,\n      cache: this.#cache\n    });\n    this.#limiter = new Limiter();\n\n    const baseAPIParams = {\n      fetcher: this.#fetcher,\n      cache: this.#cache,\n      limiter: this.#limiter\n    };\n    this.image = new ImageAPI(baseAPIParams);\n\n    const baseAPIWithImageSupportParams = {\n      ...baseAPIParams,\n      imageAPI: this.image\n    };\n\n    this.album = new AlbumAPI(baseAPIWithImageSupportParams);\n    this.track = new TrackAPI(baseAPIWithImageSupportParams);\n    this.discovery = new DiscoveryAPI(baseAPIWithImageSupportParams);\n    this.image = new ImageAPI(baseAPIParams);\n    this.band = new BandAPI(baseAPIWithImageSupportParams);\n    this.tag = new TagAPI(baseAPIWithImageSupportParams);\n    this.article = new ArticleAPI(baseAPIWithImageSupportParams);\n    this.show = new ShowAPI(baseAPIWithImageSupportParams);\n    this.fan = new FanAPI(baseAPIWithImageSupportParams);\n    this.search = new SearchAPI(baseAPIWithImageSupportParams);\n    this.autocomplete = new AutocompleteAPI(baseAPIParams);\n    this.stream = new StreamAPI(baseAPIParams);\n\n    this.limiter = {\n      album: new LimiterAlbumAPI(baseAPIWithImageSupportParams),\n      track: new LimiterTrackAPI(baseAPIWithImageSupportParams),\n      discovery: new LimiterDiscoveryAPI(baseAPIWithImageSupportParams),\n      image: new LimiterImageAPI(baseAPIParams),\n      band: new LimiterBandAPI(baseAPIWithImageSupportParams),\n      tag: new LimiterTagAPI(baseAPIWithImageSupportParams),\n      article: new LimiterArticleAPI(baseAPIWithImageSupportParams),\n      show: new LimiterShowAPI(baseAPIWithImageSupportParams),\n      fan: new LimiterFanAPI(baseAPIWithImageSupportParams),\n      search: new LimiterSearchAPI(baseAPIWithImageSupportParams),\n      autocomplete: new LimiterAutocompleteAPI(baseAPIParams),\n      stream: new LimiterStreamAPI(baseAPIParams),\n      updateSettings: this.#limiter.updateSettings.bind(this.#limiter)\n    };\n  }\n\n  setCookie(value?: string | null) {\n    this.#cookie = value;\n    this.#fetcher.setCookie(value);\n  }\n\n  get cookie() {\n    return this.#cookie;\n  }\n\n  get cache() {\n    return this.#wrappedCache;\n  }\n}\n\nexport class CacheWrapper {\n\n  #cache: Cache;\n\n  constructor(cache: Cache) {\n    this.#cache = cache;\n  }\n\n  clear(type?: CacheDataType) {\n    this.#cache.clear(type);\n  }\n\n  setTTL(type: CacheDataType, ttl: number) {\n    this.#cache.setTTL(type, ttl);\n  }\n\n  setMaxPages(maxPages: number) {\n    this.#cache.setMaxEntries(CacheDataType.Page, maxPages);\n  }\n}\n"]}