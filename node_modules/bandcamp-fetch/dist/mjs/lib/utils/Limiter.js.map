{"version":3,"file":"Limiter.js","sourceRoot":"","sources":["../../../../src/lib/utils/Limiter.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AAEpC,MAAqB,OAAO;IAI1B;QAFA,mCAAqB;QAGnB,uBAAA,IAAI,oBAAY,IAAI,UAAU,CAAC;YAC7B,aAAa,EAAE,CAAC;YAChB,OAAO,EAAE,GAAG;SACb,CAAC,MAAA,CAAC;IACL,CAAC;IAED,cAAc,CAAC,OAAuC;QACpD,uBAAA,IAAI,wBAAS,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ,CAAI,EAAwB;QAClC,OAAO,uBAAA,IAAI,wBAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;CACF;;eAlBoB,OAAO","sourcesContent":["import Bottleneck from 'bottleneck';\n\nexport default class Limiter {\n\n  #limiter: Bottleneck;\n\n  constructor() {\n    this.#limiter = new Bottleneck({\n      maxConcurrent: 5,\n      minTime: 200\n    });\n  }\n\n  updateSettings(options?: Bottleneck.ConstructorOptions) {\n    this.#limiter.updateSettings(options);\n  }\n\n  schedule<R>(fn: () => PromiseLike<R>): Promise<R> {\n    return this.#limiter.schedule(fn);\n  }\n}\n"]}