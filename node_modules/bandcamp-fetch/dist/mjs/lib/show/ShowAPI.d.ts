import BaseAPIWithImageSupport, { type BaseAPIWithImageSupportParams } from '../common/BaseAPIWithImageSupport.js';
import { type ImageFormat } from '../types/Image.js';
import type Show from '../types/Show.js';
import type Limiter from '../utils/Limiter.js';
export interface ShowAPIGetShowParams {
    showUrl: string;
    albumImageFormat?: string | number | ImageFormat;
    artistImageFormat?: string | number | ImageFormat;
    showImageFormat?: string | number | ImageFormat;
}
export interface ShowAPIListParams {
    imageFormat?: string | number | ImageFormat;
}
export default class ShowAPI extends BaseAPIWithImageSupport {
    getShow(params: ShowAPIGetShowParams): Promise<Show>;
    list(params?: ShowAPIListParams): Promise<Show[]>;
}
export declare class LimiterShowAPI extends ShowAPI {
    #private;
    constructor(params: BaseAPIWithImageSupportParams & {
        limiter: Limiter;
    });
    getShow(params: ShowAPIGetShowParams): Promise<Show>;
    list(params?: ShowAPIListParams): Promise<Show[]>;
}
//# sourceMappingURL=ShowAPI.d.ts.map