{"version":3,"file":"AlbumInfoParser.js","sourceRoot":"","sources":["../../../../src/lib/album/AlbumInfoParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { load as cheerioLoad } from 'cheerio';\nimport { decode } from 'html-entities';\nimport {type AlbumRelease} from '../types/Album.js';\nimport type Album from '../types/Album.js';\nimport { type ImageFormat } from '../types/Image.js';\nimport { ParseError, getAdditionalPropertyValue, normalizeUrl, parseLabelFromBackToLabelLink, parsePublisher, reformatImageUrl } from '../utils/Parse.js';\nimport type Track from '../types/Track.js';\n\ninterface AlbumInfoParseOptions {\n  imageBaseUrl: string;\n  albumImageFormat: ImageFormat | null;\n  artistImageFormat: ImageFormat | null;\n  includeRawData: boolean;\n}\n\nexport default class AlbumInfoParser {\n\n  static parseInfo(html: string, opts: AlbumInfoParseOptions): Album {\n    const $ = cheerioLoad(html);\n    const rawBasic = $('script[type=\"application/ld+json\"]').html();\n    const rawExtra = decode($('script[data-tralbum]').attr('data-tralbum'));\n\n    if (!rawBasic || !rawExtra) {\n      throw new ParseError('Failed to parse album info: data missing \\'ld_json\\' or \\'tralbum\\' fields.', html);\n    }\n\n    let basic, extra;\n    try {\n      basic = JSON.parse(rawBasic);\n    }\n    catch (error: any) {\n      throw new ParseError('Failed to parse album info: JSON error in basic data.', rawBasic, error);\n    }\n    try {\n      extra = JSON.parse(rawExtra);\n    }\n    catch (error: any) {\n      throw new ParseError('Failed to parse album info: JSON error in extra data.', rawExtra, error);\n    }\n\n    if (!basic || typeof basic !== 'object') {\n      throw new ParseError('Failed to parse album info: invalid basic data');\n    }\n    if (!extra || typeof extra !== 'object') {\n      throw new ParseError('Failed to parse album info: invalid extra data');\n    }\n\n    const artist: Album['artist'] = {\n      name: basic.byArtist.name\n    };\n    if (basic.byArtist['@id']) {\n      artist.url = basic.byArtist['@id'];\n    }\n\n    const album: Album = {\n      type: 'album',\n      id: extra.id,\n      name: basic.name,\n      url: basic['@id'],\n      numTracks: basic.numTracks,\n      keywords: basic.keywords,\n      description: basic.description || '',\n      releaseDate: extra.album_release_date,\n      artist,\n      releases: [],\n      tracks: []\n    };\n    const imageUrl = reformatImageUrl(basic.image, opts.albumImageFormat);\n    if (imageUrl) {\n      album.imageUrl = imageUrl;\n    }\n    const label = parseLabelFromBackToLabelLink($);\n    if (label) {\n      album.label = {\n        name: label.name,\n        url: label.url\n      };\n    }\n    const publisher = parsePublisher(basic, opts.artistImageFormat);\n    if (publisher) {\n      album.publisher = publisher;\n    }\n\n    if (!artist.url && publisher?.url) {\n      artist.url = publisher.url;\n    }\n\n    if (Array.isArray(basic.albumRelease)) {\n      const releases = basic.albumRelease.filter(\n        (release: any) => release.musicReleaseFormat).map((release: any) => {\n        const releaseItem: AlbumRelease = {\n          name: release.name,\n          format: release.musicReleaseFormat\n        };\n        if (release.description) {\n          releaseItem.description = release.description;\n        }\n        const releaseUrl = normalizeUrl(release['@id'], album.url);\n        if (releaseUrl) {\n          releaseItem.url = releaseUrl;\n        }\n        if (release.image) {\n          if (Array.isArray(release.image) && release.image[0]) {\n            releaseItem.imageUrl = release.image[0];\n          }\n        }\n        else {\n          const releaseImageArtId = getAdditionalPropertyValue(release, 'art_id');\n          if (releaseImageArtId && opts.albumImageFormat) {\n            release.imageUrl = `${opts.imageBaseUrl}/img/a${releaseImageArtId}_${opts.albumImageFormat.id}.jpg`;\n          }\n        }\n        return releaseItem;\n      }) as AlbumRelease[];\n\n      if (releases.length > 0) {\n        album.releases = releases;\n      }\n    }\n\n    if (Array.isArray(extra.trackinfo)) {\n      const tracksFromBasicInfo = basic.track?.itemListElement as Array<any>;\n      const tracks = extra.trackinfo.map((track: any) => {\n        const trackItem: Omit<Track, 'type'> = {\n          id: track.track_id || track.id,\n          name: track.title\n        };\n        if (track.duration !== undefined) {\n          trackItem.duration = track.duration;\n        }\n        const streamUrl = track.file?.['mp3-128'];\n        if (streamUrl) {\n          trackItem.streamUrl = streamUrl;\n        }\n        const streamUrlHQ = track.file?.['mp3-v0'];\n        if (streamUrlHQ) {\n          trackItem.streamUrlHQ = streamUrlHQ;\n        }\n        if (track.track_num !== undefined) {\n          trackItem.position = track.track_num;\n        }\n        const trackUrl = normalizeUrl(track.title_link, album.url);\n        const trackFromBasic = tracksFromBasicInfo.find((el: any) => el?.position === trackItem.position);\n        if (trackUrl) {\n          trackItem.url = trackUrl;\n        }\n        else if (trackItem.position !== undefined) {\n          const trackUrlFromBasic = trackFromBasic?.item?.['@id'];\n          if (trackUrlFromBasic) {\n            trackItem.url = trackUrlFromBasic;\n          }\n        }\n        const lyrics = trackFromBasic?.item?.recordingOf?.lyrics?.text;\n        if (lyrics !== undefined) {\n          trackItem.lyrics = lyrics;\n        }\n        return trackItem;\n      }) as Track[];\n\n      if (tracks.length > 0) {\n        album.tracks = tracks;\n      }\n    }\n\n    if (opts.includeRawData) {\n      album.raw = { basic, extra };\n    }\n\n    return album;\n  }\n}\n"]}