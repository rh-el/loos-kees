var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _LimiterTagAPI_limiter;
import { URLS } from '../utils/Constants.js';
import BaseAPIWithImageSupport from '../common/BaseAPIWithImageSupport.js';
import TagListParser from './TagListParser.js';
import { FetchMethod } from '../utils/Fetcher.js';
import RelatedTagsParser from './RelatedTagsParser.js';
export default class TagAPI extends BaseAPIWithImageSupport {
    async list() {
        const html = await this.fetch(URLS.SITE_URL);
        return TagListParser.parseTags(html);
    }
    async getRelated(params) {
        const payload = {
            combo: true,
            tag_names: params.tags,
            size: params.size || 20
        };
        const json = await this.fetch(URLS.RELATED_TAGS, true, FetchMethod.POST, payload);
        return RelatedTagsParser.parseRelatedTags(json);
    }
}
export class LimiterTagAPI extends TagAPI {
    constructor(params) {
        super(params);
        _LimiterTagAPI_limiter.set(this, void 0);
        __classPrivateFieldSet(this, _LimiterTagAPI_limiter, params.limiter, "f");
    }
    async list() {
        return __classPrivateFieldGet(this, _LimiterTagAPI_limiter, "f").schedule(() => super.list());
    }
    async getRelated(params) {
        return __classPrivateFieldGet(this, _LimiterTagAPI_limiter, "f").schedule(() => super.getRelated(params));
    }
}
_LimiterTagAPI_limiter = new WeakMap();
//# sourceMappingURL=TagAPI.js.map