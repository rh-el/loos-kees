{"version":3,"file":"ArticleAPI.js","sourceRoot":"","sources":["../../../../src/lib/article/ArticleAPI.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,uBAA+D,MAAM,sCAAsC,CAAC;AAInH,OAAO,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AACjD,OAAO,qBAAqB,MAAM,4BAA4B,CAAC;AAC/D,OAAO,iBAAiB,MAAM,wBAAwB,CAAC;AACvD,OAAO,aAAa,MAAM,oBAAoB,CAAC;AAe/C,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,uBAAuB;IAE7D,KAAK,CAAC,aAAa;QACjB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,OAAO,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAAkC;QACjD,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1D,MAAM,IAAI,GAAG;YACX,YAAY,EAAE,cAAc,CAAC,OAAO;YACpC,gBAAgB,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC3E,iBAAiB,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC;YAC9E,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc;SACxC,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjD,OAAO,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAA6B;QACtC,IAAI,GAAG,GAAG,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACxF,IAAI,MAAM,EAAE,IAAI,EAAE,CAAC;YACjB,GAAG,IAAI,SAAS,MAAM,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC;QACD,MAAM,IAAI,GAAG;YACX,WAAW,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC;SAChE,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;CACF;AAED,MAAM,OAAO,iBAAkB,SAAQ,UAAU;IAI/C,YAAY,MAA4D;QACtE,KAAK,CAAC,MAAM,CAAC,CAAC;QAHhB,6CAAkB;QAIhB,uBAAA,IAAI,8BAAY,MAAM,CAAC,OAAO,MAAA,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,OAAO,uBAAA,IAAI,kCAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,MAAkC;QACjD,OAAO,uBAAA,IAAI,kCAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,CAAC;CACF","sourcesContent":["import BaseAPIWithImageSupport, { type BaseAPIWithImageSupportParams } from '../common/BaseAPIWithImageSupport.js';\nimport {type ArticleCategorySection, type ArticleList} from '../types/Article.js';\nimport type Article from '../types/Article.js';\nimport { type ImageFormat } from '../types/Image.js';\nimport { URLS } from '../utils/Constants.js';\nimport type Limiter from '../utils/Limiter.js';\nimport { normalizeUrl } from '../utils/Parse.js';\nimport ArticleCategoryParser from './ArticleCategoryParser.js';\nimport ArticleListParser from './ArticleListParser.js';\nimport ArticleParser from './ArticleParser.js';\n\nexport interface ArticleAPIGetArticleParams {\n  articleUrl: string;\n  albumImageFormat?: string | number | ImageFormat;\n  artistImageFormat?: string | number | ImageFormat;\n  includeRawData?: boolean;\n}\n\nexport interface ArticleAPIListParams {\n  categoryUrl?: string;\n  imageFormat?: string | number | ImageFormat;\n  page?: number;\n}\n\nexport default class ArticleAPI extends BaseAPIWithImageSupport {\n\n  async getCategories(): Promise<ArticleCategorySection[]> {\n    const html = await this.fetch(URLS.DAILY);\n    return ArticleCategoryParser.parseCategories(html);\n  }\n\n  async getArticle(params: ArticleAPIGetArticleParams): Promise<Article> {\n    const imageConstants = await this.imageAPI.getConstants();\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      albumImageFormat: await this.imageAPI.getFormat(params.albumImageFormat, 9),\n      artistImageFormat: await this.imageAPI.getFormat(params.artistImageFormat, 21),\n      includeRawData: !!params.includeRawData\n    };\n    const html = await this.fetch(params.articleUrl);\n    return ArticleParser.parseArticle(html, opts);\n  }\n\n  async list(params?: ArticleAPIListParams): Promise<ArticleList> {\n    let url = params?.categoryUrl ? params.categoryUrl : normalizeUrl('latest', URLS.DAILY);\n    if (params?.page) {\n      url += `?page=${params.page}`;\n    }\n    const opts = {\n      imageFormat: await this.imageAPI.getFormat(params?.imageFormat)\n    };\n    const html = await this.fetch(url);\n    return ArticleListParser.parseList(html, opts);\n  }\n}\n\nexport class LimiterArticleAPI extends ArticleAPI {\n\n  #limiter: Limiter;\n\n  constructor(params: BaseAPIWithImageSupportParams & { limiter: Limiter }) {\n    super(params);\n    this.#limiter = params.limiter;\n  }\n\n  async getCategories(): Promise<ArticleCategorySection[]> {\n    return this.#limiter.schedule(() => super.getCategories());\n  }\n\n  async getArticle(params: ArticleAPIGetArticleParams): Promise<Article> {\n    return this.#limiter.schedule(() => super.getArticle(params));\n  }\n}\n"]}